@page
@model Talakado.AdminPanel.Pages.CatalogItems.EditModel
@{
}
<style>
    .AClass {
        right: 0px;
        position: absolute;
    }
</style>

<div class="container" style="padding:15px;">
    <h3>ویرایش محصول</h3>
    <form id="editForm" class="form" asp-antiforgery="true" onsubmit="return Edit(event)">
        <input type="hidden" asp-for="CatalogItem.Id" id="Id" />
        <div class="row">
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.Name"></label>
                <input asp-for="CatalogItem.Name" class="form-control" id="Name" />
            </fieldset>
        </div>
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.CatalogBrand"></label>
                <select id="Brand" asp-items="@Model.Brands" class="form-control" asp-for="CatalogItem.CatalogBrandId" id="Brand"></select>
            </fieldset>
        </div>
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.CatalogType"></label>
                <select id="Category" asp-items="@Model.Categories" class="form-control" asp-for="CatalogItem.CatalogTypeId" id="Category"></select>
            </fieldset>
        </div>
    </div>
    <div class="row" style="margin-top: 30px;">
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.AvailableStock"></label>
                <input asp-for="CatalogItem.AvailableStock" id="AvailableStock" class="form-control" />
            </fieldset>
        </div>
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.ReStockThreshold"></label>
                <input asp-for="CatalogItem.ReStockThreshold" class="form-control" id="ReStockThreshold" />
            </fieldset>
        </div>
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.MaxStockThreshold"></label>
                <input asp-for="CatalogItem.MaxStockThreshold" class="form-control" id="MaxStockThreshold" />
            </fieldset>
        </div>
    </div>
    <div class="row" style="margin-top: 30px;">
        <div class="col-md-4">
            <fieldset>
                <label asp-for="CatalogItem.Price"></label>
                <input asp-for="CatalogItem.Price" class="form-control" id="Price" />
            </fieldset>
        </div>
    </div>
    <div class="row" style="margin-top: 30px;">
        <div class="col-md-12">
            <h4 style="color:gray">تصاویر کاتالوگ</h4>
                @if (Model.CatalogItem.CatalogItemImages != null)
                {
                    @foreach (var item in Model.CatalogItem.CatalogItemImages)
                    {
                        var src = $"https://localhost:7238/{@item.Src}";
                        <span id="image-@item.Id" style="position:relative;margin:3px;display:inline-block">
                            <button type="button" onclick="removeImage('@item.Id')" class="close AClass">
                                <span>&times;</span>
                            </button>
                            <img class="fa-image" width="200px" height="200px" src="@src" />
                        </span>
                    }
                }
                
        </div>
    </div>
    <div class="row" style="margin-top: 30px;">
        <div class="col-md-4">
            <fieldset class="form-group">
                <label for="basicInput">افزودن تصویر </label>
                <input type="file" multiple class="form-control" accept="image/*" id="Images">
            </fieldset>
        </div>
    </div>
    <div class="row">
        <h4 style="color:gray">ویژگی ها</h4>
        <div class="col-md-3">
            <fieldset class="form-group">
                <label for="basicInput"> نام گروه </label>
                <input type="text" class="form-control" id="txtGroup" placeholder="نام گروه" />
            </fieldset>
        </div>
        <div class="col-md-3">
            <fieldset class="form-group">
                <label for="basicInput"> نام ویژگی </label>
                <input type="text" class="form-control" id="txtDisplayName" placeholder="نام ویژگی" />
            </fieldset>
        </div>
        <div class="col-md-3">
            <fieldset class="form-group">
                <label for="basicInput"> مقدار ویژگی </label>
                <input type="text" class="form-control" id="txtValue" placeholder="مقدار ویژگی" />
            </fieldset>
        </div>
        <div class="col-md-3">
            <fieldset class="form-group">
                <br />
                <a class="btn btn-success" id="btnAddFeatures">افزودن</a>
            </fieldset>
        </div>
    </div>
    <div class="row" style="margin-top: 30px;">
        <div class="col-md-12">
                <table id="tbl_Features1" class="col-md-12 table table-bordered table-hover  table-condensed table-responsive">
                    <thead>
                        <tr>
                            <th>
                                گروه
                            </th>
                            <th>
                                نام ویژگی
                            </th>
                            <th>
                                مقدار ویژگی
                            </th>
                            <th>
                                عملیات
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.CatalogItem.CatalogItemFeatures)
                        {
                            <tr id="feature-@item.Id">
                                @* <input type="hidden" value="@item.Id" /> *@
                                <td>@item.Group</td>
                                <td>@item.Key</td>
                                <td>@item.Value</td>
                                <td><img style="cursor:pointer" onclick="removeFeature('@item.Id')" width="20px" src="~/image/trash_remove_icon.png" /></td>
                            </tr>
                        }
                    </tbody>
                </table>
            <table id="tbl_Features" class="col-md-12 table table-bordered table-hover  table-condensed table-responsive">
                
                <tbody>
                    
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        
        
        <div class="col-xl-12 col-lg-12 col-md-12 mb-1">
            <fieldset class="form-group">
                <label for="basicInput"> توضیحات</label>
                <textarea id="Description" asp-for="CatalogItem.Description" class="form-control " rows="5"></textarea>
                <span asp-validation-for="CatalogItem.Description" class="text-danger"></span>
            </fieldset>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-12 col-lg-12 col-md-12 mb-1">
            <fieldset class="form-group">
                <button type="submit" onclick="Edit()" class="btn btn-success col-md-12"> ثبت کاتالوگ</button>
            </fieldset>
        </div>
    </div>
    </form>
</div>



@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        imageForRemoveList = [];
        featureForRemoveList = [];

        var CatalogItemFeatire = {
            Key:"",
            Value:"",
            Group:""
        }
        var CatalogItemImage = {
            Src: ""
        }
        function removeImage(id) {
            Swal.fire({
                title: "آیا از حذف تصویر اطمینان دارید؟",
                text: "حذف تصویر قابل برگشت نیست",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "بله تصویر را حذف کن!",
                cancelButtonText: "لغو",
            }).then((result) => {
                if (result.isConfirmed) {
                    imageForRemoveList.push(id);
                    $('#image-' + id).remove();
                }
            });
        }

        function removeFeature(id) {
            Swal.fire({
                title: "آیا از حذف ویژگی اطمینان دارید؟",
                text: "حذف ویژگی قابل برگشت نیست",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "بله ویژگی را حذف کن!",
                cancelButtonText: "لغو",
            }).then((result) => {
                if (result.isConfirmed) {
                    featureForRemoveList.push(id);
                    $('#feature-' + id).remove();
                }
            });
        }
        function removeFeature1(e) {
            Swal.fire({
                title: "آیا از حذف ویژگی اطمینان دارید؟",
                text: "حذف ویژگی قابل برگشت نیست",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "بله ویژگی را حذف کن!",
                cancelButtonText: "لغو",
            }).then((result) => {
                if (result.isConfirmed) {
                    e.closest('tr').remove();
                }
            });
        }
        
        function Edit(e) {
            e.preventDefault();
            var form = $("#editForm");
            form.validate();
            if (form.valid() == false) {
                swal.fire(
                    'هشدار!',
                    "اطلاعات فرم به درستی وارد نشده است!",
                    'warning'
                );
                return false;
            }
       

            var data = new FormData();
            //دریافت مقادیر از تکس باکس ها و....
            data.append("Id", $("#Id").val());
            data.append("Name", $("#Name").val());
            data.append("AvailableStock", $("#AvailableStock").val());
            data.append("ReStockThreshold", $("#ReStockThreshold").val());
            data.append("MaxStockThreshold", $("#MaxStockThreshold").val());
            data.append("Price", $("#Price").val());
            data.append("Description", $("#Description").val());
            data.append("RemovedImages", imageForRemoveList);
            data.append("RemovedFeatures", featureForRemoveList);

            data.append("CatalogTypeId", $('#Category').find('option:selected').val());
            data.append("CatalogBrandId", $('#Brand').find('option:selected').val());

            //دریافت عکس های انتخاب شده توسط کاربر و قرار دادن عکس ها در متغیر data
            var catalogImages = document.getElementById("Images");
            if (catalogImages.files.length > 0) {
                for (var i = 0; i < catalogImages.files.length; i++) {
                    data.append('CatalogItemImages-' + i, catalogImages.files[i]);
                }
            }

            //دریافت ویژگی های محصول از جدول
            var dataFeaturesViewModel = $('#tbl_Features tr:gt(0)').map(function () {
                return {
                    Group: $(this.cells[0]).text(),
                    Key: $(this.cells[1]).text(),
                    Value: $(this.cells[2]).text(),
                };
            }).get();

            $.each(dataFeaturesViewModel, function (i, val) {
                data.append('CatalogItemFeatures[' + i + '].Group', val.Group);
                data.append('CatalogItemFeatures[' + i + '].Key', val.Key);
                data.append('CatalogItemFeatures[' + i + '].Value', val.Value);
            });

            var ajaxRequest = $.ajax({
                type: "post",
                url: "/catalogItems/edit",
                contentType: false,
                processData: false,
                data: data,
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (result) {
                    console.log(result)
                    if (result.isSuccess == true) {
                        console.log(result)
                        swal.fire(
                            'هشدار!',
                            "کاتالوگ با موفقیت ویرایش شد",
                            'success'
                        );
                    }
                    else {
                        swal.fire(
                            'هشدار!',
                            "کاتالوگ ویرایش نشد",
                            'error'
                        );
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(xhr.status);
                    alert(thrownError);
                }
            });

            ajaxRequest.done(function (xhr, textStatus) {
                // Do other operation
            });
        }

        $("#btnAddFeatures").on("click", function () {
            
            var txtDisplayName = $("#txtDisplayName").val();
            var txtValue = $("#txtValue").val();
            var txtGroup = $("#txtGroup").val();

            if (txtDisplayName == "" || txtValue == "" || txtGroup == "") {
                swal.fire(
                    'هشدار!',
                    "نام گروه - نام ویژگی و مقدار اجباری هستند",
                    'warning'
                );
            }
            else {
                $('#tbl_Features tbody').append('<tr><td>' + txtGroup + '</td>  <td>' + txtDisplayName + '</td>  <td>' + txtValue + '</td> <td><img style="cursor:pointer" onclick="removeFeature1(this)" width="20px" src="../../image/trash_remove_icon.png" /> </td> </tr>');
            }
        });
    </script>
}